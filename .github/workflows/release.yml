name: Create release

env:
  binary: README.md

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]
  workflow_dispatch:
          
jobs:
  linter:
    runs-on: ubuntu-latest
    name: run golangci-lint
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: install linter 
        run: |
          date -u
          curl -sSfL https://raw.githubusercontent.com/golangci/golangci-lint/master/install.sh | sh -s -- -b /usr/local/bin
          date -u
          echo "ran for $SECONDS seconds"
      - name: run linter 
        run: |
          date -u
          pwd
          ls -altr
          golangci-lint run --timeout 5m -v
          date -u
          echo "ran for $SECONDS seconds"
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3

    - name: Upload 
      uses: actions/upload-artifact@v3
      with:
        name: ${{ env.binary }}
        path: ./
        
  release-content:
    runs-on: ubuntu-latest
    needs: build
    steps:
    - name: 'Download Artifact'
      uses: actions/download-artifact@v3
      with:
        name: ${{ env.binary }}
    - name: 'Create GitHub Release'
      id: create-new-release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: v0.1.${{github.run_number}}
        release_name: v0.1.${{github.run_number}}
    - name: Upload asset to Github Release
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create-new-release.outputs.upload_url }}
        asset_path: ${{ env.binary }}
        asset_name: ${{ env.binary }}
        asset_content_type: application/zip 
